# Maintainer: Alastair Hughes < hobbitalastair at yandex dot com>

# Package information
pkgname='openssl'
_ver='1.0.2m'
# use a pacman compatible version scheme
pkgver=${_ver/[a-z]/.${_ver//[0-9.]/}}
pkgrel=1
pkgdesc='The Open Source toolkit for Secure Sockets Layer and Transport Layer Security'

# Additional information...
arch=('mips' 'i586')
url='https://www.openssl.org'
license=('custom:BSD')

# Dependency information
groups=('base-devel')
depends=('zlib' 'musl')
hostdepends=('toolchain')

# Building information
backup=('etc/ssl/openssl.cnf')
options=('!makeflags')
source=("https://www.openssl.org/source/${pkgname}-${_ver}.tar.gz"
        'no-rpath.patch'
        'ca-dir.patch')
md5sums=('10e9e37f492094b9ef296f68f24a7666'
         'dc78d3d06baffc16217519242ce92478'
         '3bf51be3a1bbd262be46dc619f92aa90')


prepare() {
    cd "${srcdir}/${pkgname}-${_ver}"

    # Remove rpath.
    patch -p0 -i $srcdir/no-rpath.patch
    # Set ca dir to /etc/ssl by default.
    patch -p0 -i $srcdir/ca-dir.patch
}


build() {
    cd "${srcdir}/${pkgname}-${_ver}"

    if [ "${_target_arch_alias}" == 'x86_64' ]; then
        openssltarget='linux-x86_64'
        optflags='enable-ec_nistp_64_gcc_128'
    elif [ "${_target_arch_alias}" == 'i386' ]; then
        openssltarget='linux-elf'
        optflags=''
    elif [ "${_target_arch_alias}" == 'mips' ]; then
        openssltarget='linux-mips32'
        optflags=''
    fi

    # Mark stack as non-executable.
    ./Configure --prefix="/usr" \
        --openssldir="/etc/ssl" \
        --libdir="lib" \
        shared zlib "${optflags}" \
        "${openssltarget}" \
        "-Wa,--noexecstack ${CFLAGS} -fPIC ${LDFLAGS}"

    make
}


package() {
    cd "${srcdir}/${pkgname}-${_ver}"

    make INSTALL_PREFIX="${pkgdir}/" \
        MANDIR="/usr/share/man" \
        MANSUFFIX='ssl' install
    install -Dm0644 LICENSE "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"

    # We don't support dynamic linking, so rm the engines dir.
    rm -rf "${pkgdir}/usr/lib/engines"

    # Let ca-certificates provide an alternative c_rehash.
    rm -f "${pkgdir}/usr/bin/c_rehash"
}
