# Maintainer: Alastair Hughes < hobbitalastair at yandex dot com>

# Package information
pkgname="linux"
_major_version='4.4'
_srcname="linux-${_major_version}"
pkgdesc="defconfig kernel"
pkgver="${_major_version}.5"
pkgrel=1

# Additional information...
arch=('i586' 'mips')
url='http://www.kernel.org'
license=('GPL2')

# Dependency information
groups=('base')
# Depends: toolchain/gcc-static toolchain/binutils
# HostDepends: bc inetutils
# TODO: Expand and update!
makedepends=('bc' 'gcc')

# Building information
options=('!strip')
source=("https://www.kernel.org/pub/linux/kernel/v4.x/${_srcname}.tar.xz"
        "https://www.kernel.org/pub/linux/kernel/v4.x/patch-${pkgver}.xz")
md5sums=('9a78fa2eb6c68ca5a40ed5af08142599'
         'edddb33405ea1ab02b90eb9cecaa43f6')

modules() {
    # true if modules are enabled, false otherwise
    grep ".config" -e 'CONFIG_MODULES=y' > /dev/null
    return "$?"
}

prepare() {
    cd "${srcdir}/${_srcname}"

    # Add upstream patch.
    patch -p1 -i "${srcdir}/patch-${pkgver}"

    # Set extraversion to pkgrel.
    sed -ri "s|^(EXTRAVERSION =).*|\1 -${pkgrel}|" Makefile

    # Clean up the kernel tree.
    make mrproper

    # Update the config to use the proper toolchain.
    sed -i -e "/CONFIG_CROSS_COMPILE/s:=\".*\":=\"${_target_triplet}-\":" \
        "${srcdir}/config.${_target_config}"

    # Make the default config.
    make defconfig ARCH="${_target_arch_alias}"
}


build() {
    cd "${srcdir}/${_srcname}"

    # Make the kernel image and modules, if needed
    targets="bzImage"
    if modules; then
        # Modules are enabled
        targets+=" modules"
    fi

    make ${MAKEFLAGS} ${targets} ARCH="${_target_arch_alias}"
}


package() {
    # Main Linux kernel package
    cd "${srcdir}/${_srcname}"

    # Find the kernel version
    _kernver="$(make kernelrelease)"

    # Make the boot directory
    mkdir -p "${pkgdir}/boot"

    # Copy the image to the end location
    cp "arch/${_target_arch_alias}/boot/bzImage" \
       "${pkgdir}/boot/vmlinuz-${_target_config}"

    # Install the modules and firmware, if required
    if modules; then
        mkdir -p "${pkgdir}"/{/usr/lib/modules,/usr/lib/firmware}
        make INSTALL_MOD_PATH="${pkgdir}/" modules_install
        # Remove the kernel source tree
        rm -f "${pkgdir}/lib/modules/${_kernver}"/{source,build}
        # Add vmlinux
        install -D -m644 'vmlinux' \
            "${pkgdir}/usr/lib/modules/${_kernver}/build/vmlinux" 
    fi
}
