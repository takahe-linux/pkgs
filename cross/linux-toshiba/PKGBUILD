# Maintainer: Alastair Hughes < hobbitalastair at yandex dot com>

# Package information
pkgname="linux-toshiba"
_major_version='4.10'
_srcname="linux-${_major_version}"
pkgdesc="Toshiba 310CDS kernel"
pkgver="${_major_version}.1"
pkgrel=2

# Additional information...
arch=('i586')
url='http://www.kernel.org'
license=('GPL2')

# Dependency information
hostdepends=('bc' 'inetutils' "${_target_triplet}-gcc-static"
    "${_target_triplet}-binutils")

# Building information
options=('!buildflags')
source=("https://www.kernel.org/pub/linux/kernel/v4.x/${_srcname}.tar.xz"
        "https://www.kernel.org/pub/linux/kernel/v4.x/patch-${pkgver}.xz")
md5sums=('b5e7f6b9b2fe1b6cc7bc56a3a0bfc090'
         'd4ab54e17b686d1dbb1d28238fd0b081')

prepare() {
    cd "${srcdir}/${_srcname}"

    # Add upstream patch.
    patch -p1 -i "${srcdir}/patch-${pkgver}"

    # Set extraversion to pkgrel.
    sed -ri "s|^(EXTRAVERSION =).*|\1 -${pkgrel}-toshiba|" Makefile

    # Clean up the kernel tree.
    make mrproper

    # Generate the config.
    make allnoconfig ARCH="${_target_arch_alias}"
    cat >> .config << EOF
# Misc settings.
CONFIG_DEFAULT_HOSTNAME="takahe"
CONFIG_CROSS_COMPILE="${_target_triplet}-"
CONFIG_M586MMX=y
# ~2K for CONFIG_TOSHIBA
CONFIG_TOSHIBA=y
CONFIG_LOG_BUF_SHIFT=16
CONFIG_MULTIUSER=y
CONFIG_BINFMT_ELF=y
CONFIG_BINFMT_SCRIPT=y
CONFIG_SLOB=y
CONFIG_NO_HZ_IDLE=y
# CONFIG_HZ_PERIODIC is not set
# CONFIG_SCHED_DEBUG is not set
# CONFIG_PERF_EVENTS_INTEL_UNCORE is not set
# CONFIG_PERF_EVENTS_INTEL_RAPL is not set
# CONFIG_PERF_EVENTS_INTEL_CSTATE is not set
CONFIG_NOHIGHMEM=y
# CONFIG_HIGHMEM4G is not set
CONFIG_CC_OPTIMIZE_FOR_SIZE=y
CONFIG_OPTIMIZE_INLINING=y

# uevent helper (hotplug script) support.
# We use mdev for (eg) loading firmware.
# TODO: We should replace this with a netlink helper daemon instead.
CONFIG_UEVENT_HELPER=y
CONFIG_UEVENT_HELPER_PATH="/usr/bin/mdev"

# We currently need this for the hard drive controller.
CONFIG_BLOCK=y
# CONFIG_LBDAF is not set
# CONFIG_BLK_DEV_BSG is not set
# CONFIG_IOSCHED_CFQ is not set
# CONFIG_SCSI_PROC_FS is not set
CONFIG_BLK_DEV_SD=y
CONFIG_ATA=y
# CONFIG_ATA_VERBOSE_ERROR is not set
# CONFIG_SATA_PMP is not set
# CONFIG_ATA_BMDMA is not set
CONFIG_ATA_SFF=y
CONFIG_PATA_LEGACY=y
# CONFIG_ATA_ACPI is not seta

# CDROM support.
# Note that we would also need the filesystem here.
#CONFIG_BLK_DEV_SR=y

# PCI support...
CONFIG_PCI=y
# CONFIG_PNP_DEBUG_MESSAGES is not set
# CONFIG_VGA_ARB is not set

# PNP support (disable ACPI using acpi=off to make this work).
CONFIG_PNPBIOS=y

# Filesystems!.
CONFIG_SHMEM=y
CONFIG_TMPFS=y
CONFIG_DEVTMPFS=y
CONFIG_DEVTMPFS_MOUNT=y
CONFIG_PROC_FS=y
CONFIG_PROC_SYSCTL=y
# CONFIG_PROC_PAGE_MONITOR is not set
CONFIG_SYSFS=y
CONFIG_MSDOS_PARTITION=y
CONFIG_EXT2_FS=y
# CONFIG_SWAP is not set
CONFIG_FILE_LOCKING=y

# FAT support (approx 20K).
CONFIG_VFAT_FS=y
CONFIG_NLS_CODEPAGE_437=y
CONFIG_NLS_ISO8859_1=y

# Networking support (~550k).
CONFIG_NET=y
CONFIG_UNIX=y
CONFIG_INET=y
# I can't use IPv6 yet, so disable.
# CONFIG_IPV6 is not set
# Wireless:
CONFIG_PACKET=y
CONFIG_CFG80211=y
CONFIG_MAC80211=y
CONFIG_NL80211=y
CONFIG_NETDEVICES=y
CONFIG_RTL8192CU=y
# CONFIG_RTLWIFI_DEBUG is not set

# USB support.
CONFIG_USB=y
CONFIG_USB_SUPPORT=y
CONFIG_USB_OHCI_HCD=y
CONFIG_USB_OHCI_HCD_PCI=y
CONFIG_USB_STORAGE=y

# Terminal support.
CONFIG_TTY=y
# CONFIG_UNIX98_PTYS is not set
# CONFIG_LEGACY_PTYS is not set
CONFIG_HID is not set
CONFIG_INPUT_MOUSEDEV is not set
CONFIG_INPUT_MOUSE is not set

# Virtual terminal options.
CONFIG_VT=y
# CONFIG_CONSOLE_TRANSLATIONS is not set
CONFIG_VT_CONSOLE=y

# Printk options.
CONFIG_PRINTK=y
CONFIG_PRINTK_TIME=y

# Framebuffer console support.
CONFIG_FB=y
CONFIG_FB_VESA=y
CONFIG_FRAMEBUFFER_CONSOLE=y
CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY=y
CONFIG_VGA_CONSOLE=y

# Serial console support.
CONFIG_SERIAL_8250=y
# CONFIG_SERIAL_8250_DEPRECATED_OPTIONS is not set
CONFIG_SERIAL_8250_CONSOLE=y
# CONFIG_SERIAL_8250_MID is not set

# Sound support (50K).
CONFIG_SOUND=y
CONFIG_SND=y
# CONFIG_SND_PCI is not set
# CONFIG_SND_USB is not set
# CONFIG_SND_SUPPORT_OLD_API is not set
# CONFIG_SND_PROC_FS is not set
CONFIG_ISA=y
CONFIG_SND_OPL3SA2=y
EOF

   yes '' | make oldconfig ARCH="${_target_arch_alias}"
}


build() {
    cd "${srcdir}/${_srcname}"
    yes '' | make bzImage ARCH="${_target_arch_alias}"
}


package() {
    cd "${srcdir}/${_srcname}"

    # Copy the image to the end location
    mkdir -p "${pkgdir}/boot"
    cp "arch/${_target_arch_alias}/boot/bzImage" \
       "${pkgdir}/boot/vmlinuz-toshiba"
}
