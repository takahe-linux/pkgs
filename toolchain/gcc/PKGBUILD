# Maintainer: Alastair Hughes < hobbitalastair at yandex dot com>

# Package information
_pkgname='gcc'
pkgname="${_target_triplet}-${_pkgname}"
pkgver='4.8.3'
pkgrel=1
pkgdesc="The GNU Compiler Collection"

# Additional information...
arch=('x86_64')
url='http://gcc.gnu.org/'
license=('GPL' 'LGPL' 'FDL')

# Dependency information
groups=("${_target_triplet}")
depends=("${_target_triplet}-binutils" 'zlib' 'libmpc')
makedepends=("${_target_triplet}-gcc-static" 'gmp' 'mpfr')
provides=("${_target_triplet}-gcc-static")
conflicts=("${_target_triplet}-gcc-static")
replaces=("${_target_triplet}-gcc-static")

# Building information
options=(!emptydirs !strip)
source=("ftp://gcc.gnu.org/pub/gcc/releases/gcc-${pkgver}/gcc-${pkgver}.tar.bz2"
        "gcc-4.8.3-musl.patch")
sha256sums=('6a8e4f11b185f4fe2ed9d7fc053e80f8c7e73f800c045f51f9d8bea33f080f1e'
            '0bcf4db18111be1942b9fde1ffe48d94c32ce008283bbce9dcde9333ea4fe8d7')


prepare() {
    cd "${srcdir}/${_pkgname}-${pkgver}"

    echo "${pkgver}" > gcc/BASE-VER

    # hack! - some configure tests for header files using "$CPP $CPPFLAGS"
    sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {libiberty,gcc}/configure

    # Disable fixincludes (could lead to header pollution)
    sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

    patch -p1 < "${srcdir}"/*.patch
    
    mkdir "${srcdir}/gcc-build"
}


build() {
    cd "${srcdir}/gcc-build"

    export CFLAGS_FOR_TARGET="${_target_cflags}"
    export CXXFLAGS_FOR_TARGET="${CFLAGS_FOR_TARGET}"

    export CFLAGS_FOR_BUILD="${CFLAGS}"
    export CXXFLAGS_FOR_BUILD="${CXXFLAGS}"

    # --enable-cxx-flags is a hack, because currently libstdc++ uses CXXFLAGS,
    # not CXXFLAGS_FOR_TARGET. See GCC bug 53579...
    # Sigh...
    #TODO: Figure out exactly how the build systems _works_ (or doesn't) so
    # that I can patch it instead of applying this hack...
    # WARNING: To use -Os or -O2, you need more than 1.5GB of space (tmp if you
    # are using /tmp for compiling). It also failed with -g... for the same
    # reason. I might need to set up virtual swap?
    export CXXFLAGS=""

    # Also, disable libmudflap and mudflap (they do not build)
    LDFLAGS="-Wl,-rpath,${_toolroot}/lib" \
    "${srcdir}/${_pkgname}-${pkgver}/configure" \
        --build="${_local_triplet}" \
        --host="${_local_triplet}" \
        --target="${_target_triplet}" \
        --prefix="${_toolroot}" \
        --with-sysroot="${_sysroot}" \
        --with-native-system-header-dir="${_includedir}" \
        --with-local-prefix="${_sysroot}" \
        --libexecdir="${_libdir}" \
        --enable-languages=c,c++ \
        --enable-c99 \
        --enable-__cxa_atexit \
        --enable-threads=posix \
        --enable-libstdcxx-time \
        --enable-cxx-flags="${CXXFLAGS_FOR_TARGET}" \
        --disable-nls \
        --disable-static \
        --disable-multilib \
        --disable-libmudflap \
        --disable-mudflap \
        --with-gnu-as \
        --with-gnu-ld \
        --with-system-zlib

    make
}


package() {
    cd "${srcdir}/gcc-build"

    make DESTDIR="${pkgdir}" install -j1

    # strip target binaries
    find "${pkgdir}/usr/lib/gcc/${_target_triplet}/" \
         "${pkgdir}${_toolroot}/lib" \
         -type f -and \( -name \*.a -or -name \*.o \) \
         -exec "${_toolroot}/bin/${_target_triplet}-objcopy" \
         -R .comment -R .note -R .debug_info -R .debug_aranges \
         -R .debug_pubnames -R .debug_pubtypes -R .debug_abbrev -R .debug_line \
         -R .debug_str -R .debug_ranges -R .debug_loc '{}' \;

    # strip host binaries
    find "${pkgdir}${_toolroot}/bin/" \
         "${pkgdir}/usr/lib/gcc/${_target_triplet}/" \
         -type f -and \( -executable \) -exec strip '{}' \;

    # Remove info files (already existing)
    rm -r "${pkgdir}${_toolroot}/share/info"
}
