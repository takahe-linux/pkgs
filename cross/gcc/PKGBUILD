# Maintainer: Alastair Hughes < hobbitalastair at yandex dot com>

# This needs more than 1.4GB of spare space to build!

# Package information
pkgbase='gcc'
pkgname=('gcc' 'gcc-libs')
pkgver='7.2.0'
pkgrel=8

# Additional information...
arch=('mips' 'i586')
url="http://gcc.gnu.org"
license=('GPL' 'LGPL' 'FDL')

# Dependency information
makedepends=('linux-api-headers' 'musl' 'gmp' 'mpfr' 'mpc' 'zlib' 'binutils')
hostdepends=('toolchain')

# Building information
options=('!emptydirs')
source=("ftp://gcc.gnu.org/pub/gcc/releases/gcc-${pkgver}/gcc-${pkgver}.tar.xz"
        *.patch)
sha256sums=('1cf7adf8ff4b5aa49041c8734bbcf1ad18cc4c94d0029aae0f4e48841088479a'
            '7ad65c8a8613b34b7ffdf0dcee15659ba12a21ed0b65052644d6ca73653d337a'
            '9854b80d6b4854f48438f6784e86411fbc607763a6be80faae5a36c508c3cf9e'
            'c00abb172cd9aee0c951450b4e77d320ea6fd76a2901e96547113c3d0e9bf210')


prepare() {
    cd "${srcdir}/${pkgbase}-${pkgver}"

    # hack! - some configure tests for header files using "$CPP $CPPFLAGS"
    sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {libiberty,gcc}/configure

    # Disable fixincludes (could lead to header pollution)
    sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

    # Apply the patches...
    for p in "${srcdir}"/*.patch; do
        patch -p1 < "${p}"
    done
    
    mkdir "${srcdir}/gcc-build"
}


build() {
    cd "${srcdir}/gcc-build"

    CFLAGS_FOR_TARGET="${CFLAGS}"
    CXXFLAGS_FOR_TARGET="${CXXFLAGS}"
    CPPFLAGS_FOR_TARGET="${CPPFLAGS}"
    LDFLAGS_FOR_TARGET="${LDFLAGS}"

    CFLAGS_FOR_BUILD="${HOSTCFLAGS}"
    CPPFLAGS_FOR_BUILD="${HOSTCPPFLAGS}"
    CXXFLAGS_FOR_BUILD="${HOSTCXXFLAGS}"
    LDFLAGS_FOR_BUILD="${HOSTLDFLAGS}"

    # GCC doesn't seem to sanely use plain *FLAGS as build or target flags;
    # unset these for now (they are set to be target flags by default).
    unset CFLAGS CXXFLAGS CPPFLAGS LDFLAGS

    "${srcdir}/${pkgbase}-${pkgver}/configure" \
        --build="${_local_triplet}" \
        --host="${_target_triplet}" \
        --target="${_target_triplet}" \
        --prefix="/usr" \
        --libdir="/usr/lib" \
        --libexecdir="/usr/lib" \
        --mandir="/usr/share/man" \
        --enable-languages=c,c++ \
        --enable-checking=release \
        --enable-__cxa_atexit \
        --enable-threads=posix \
        --enable-libstdcxx-time \
        --disable-nls \
        --disable-multilib \
        --disable-werror \
        --disable-libstdcxx-pch \
        --disable-libatomic \
        --disable-libsanitizer \
        --disable-libquadmath \
        --disable-libmpx \
        --disable-libvtv \
        --disable-libssp \
        --disable-libcc1 \
        --disable-plugin \
        --disable-lto \
        --disable-libunwind-exceptions \
        --with-native-system-header-dir="/usr/include" \
        --with-gnu-as \
        --with-gnu-ld \
        --with-system-zlib

    make AS_FOR_TARGET="${AS}" \
        LD_FOR_TARGET="${LD}"
}


package_gcc() {
    pkgdesc="GNU Compiler Collection"
    depends=('musl' 'gmp' 'mpfr' 'mpc' 'zlib' 'binutils' 'gcc-libs')
    groups=('base-devel')
    cd "${srcdir}/gcc-build"

    make DESTDIR="${pkgdir}" install-strip -j1
    rm -rf "${pkgdir}/usr/lib/"*.so{,.*}

    # Remove info files.
    rm -r "${pkgdir}/usr/share/info"

    # Add a link to cc
    ln -s gcc "${pkgdir}/usr/bin/cc"
}

package_gcc-libs() {
    pkgdesc="Runtime GCC libraries"
    groups=('base')
    cd "${srcdir}/gcc-build"

    make DESTDIR="${pkgdir}" install-strip -j1
    mkdir "${srcdir}/libs"
    mv "${pkgdir}/usr/lib/"*.so{,.*} "${srcdir}/libs"
    rm -rf "${pkgdir}/"*
    mkdir -p "${pkgdir}/usr/lib/"
    mv "${srcdir}/libs/"* "${pkgdir}/usr/lib/"
}
