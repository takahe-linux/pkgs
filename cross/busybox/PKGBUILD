# Maintainer: Alastair Hughes < hobbitalastair at yandex dot com>

# Package information
pkgname=('busybox' 'mdev' 'hush' 'bb-coreutils' 'bb-util-linux' 'bb-findutils')
pkgver='1.26.0'
pkgrel=2

# Additional information...
arch=('i586' 'mips')
url="https://www.busybox.net"
license=('GPL')

# Dependency information
makedepends=('musl' 'linux-api-headers')
hostdepends=('toolchain')

# Building information
_web_address="${url}/downloads"
_patch_address="${_web_address}/fixes-${pkgver}"
source=("${_web_address}/${pkgname}-${pkgver}.tar.bz2"
        "config"
        "man.conf"
       )
md5sums=('362acc60bd94343aa36d98beb1f0831f'
         'f68ddf6ec457133818c66938dcd8a1a4'
         'e9245e5f55f004e3598cc90e2e86de30')


prepare() {
    cd "${srcdir}/${pkgname}-${pkgver}"

    # Adjust the config for the current settings
    sed -i -e "/CONFIG_CROSS_COMPILER_PREFIX/s:=\".*\":=\"${_target_triplet}-\":" \
        "${srcdir}/config"
}


build() {
    cd "${srcdir}/${pkgname}-${pkgver}"

    # Install the default config
    cp "${srcdir}/config" ".config"

    # If you want to run menuconfig uncomment the following line:
    #make menuconfig; return 1

    make ARCH="${_target_arch}" \
        CC="${CC}" HOSTCC="${HOSTCC}" \
        HOSTCFLAGS="${HOSTCFLAGS}"

}


package_busybox() {
    pkgdesc="Main busybox binary and symlinks"
    groups=('bb' 'base')
    provides=('kbd' 'which' 'gzip' 'tar' 'bzip2' 'awk' 'diffutils' \
        'sed' 'vi' 'patch' 'shadow' 'less' 'hdparm' 'man' 'inetutils' \
        'ip2route' 'iputils' 'dhcpcd' 'procps-ng')
    conflicts=('kbd' 'which' 'gzip' 'tar' 'bzip2' 'awk' 'diffutils' \
        'sed' 'vi' 'patch' 'shadow' 'less' 'hdparm' 'man' 'inetutils' \
        'ip2route' 'iputils' 'dhcpcd' 'procps-ng')

    cd "${srcdir}/${pkgname}-${pkgver}"

    ARCH="${_target_arch}" make DESTDIR="${pkgdir}/" install

    # Copy the busybox binary into place
    install -Dm755 "_install/bin/busybox" "${pkgdir}/usr/bin/busybox"


    KBD="deallocvt setkeycodes showkey kbd_mode"
    KEYBOARD="dumpkmap loadkmap setconsole"
    WHICH="which"

    APPLETS="gunzip gzip tar bzip2 bunzip2 bzcat zcat [ [[ uevent"
    EDITORS="awk cmp diff patch sed vi"
    SHADOW="adduser addgroup deluser delgroup passwd"

    MISC="less hdparm man halt poweroff reboot"
    NET="ping hostname ip udhcpc ipaddr iplink iproute"
    PROC="iostat lsof nmeter pstree top free fuser kill pgrep \
        pidof pkill ps renice watch sysctl"

    _link_packages $KBD $KEYBOARD $NCURSES $WHICH $APPLETS $EDITORS $LOGIN \
        $MISC $NET $PROC $SHADOW

    install -Dm0644 "${srcdir}/man.conf" "${pkgdir}/etc/man.conf"
}

package_mdev() {
    pkgdesc="Lightweight udev alternative, from busybox"
    depends=("busybox")
    groups=('bb' 'base')

    MDEV="mdev"

    _link_packages $MDEV
}

package_hush() {
    pkgdesc="Simple busybox shell"
    depends=("busybox")
    groups=('bb')

    SHELLS="hush"

    _link_packages $SHELLS
}

package_bb-coreutils() {
    pkgdesc="Coreutils symlinks for busybox"
    groups=('bb' 'base')
    depends=('busybox')
    provides=('coreutils')
    conflicts=('coreutils')

    COREUTILS="basename base64 cat date id groups shuf test touch tr chgrp \
        chmod chown chroot cksum comm cp cut dd df dirname du echo env expand \
        expr false fsync head install ln logname ls md5sum mkdir mkfifo \
        mknod mv nice nohup printf pwd readlink realpath rm rmdir seq \
        sha1sum sha256sum sha512sum sha3sum sleep sort stat stty sync tac \
        tail tee true tty uname unexpand uniq usleep uudecode uuencode wc \
        whoami yes timeout rev mktemp od"

    _link_packages $COREUTILS
    
}

package_bb-util-linux() {
    pkgdesc="util linux symlinks for busybox"
    groups=('bb' 'base')
    depends=('busybox' 'hush')
    provides=('util-linux')
    conflicts=('util-linux')

    UTILLINUX="blockdev dmesg fbset getopt hwclock losetup lspci lsusb \
        mount umount su nsenter unshare"
    LOGIN="getty login"
    MISC_UTILS="mountpoint setsid time fsck"

    _link_packages $UTILLINUX $LOGIN $MISC_UTILS

    # Add a custom nologin script.
    # There is a nologin shell script provided with busybox, which we ignore
    # (it is pretty basic, and uses /bin/sh, not /usr/bin/sh).
    cat > "${pkgdir}/usr/bin/nologin" << EOF
#!/usr/bin/sh
if [ -f /etc/nologin.conf ]; then
    cat /etc/nologin.conf
else
    echo 'login not enabled'
fi

exit 1
EOF
    chmod 0755 "${pkgdir}/usr/bin/nologin"

}

package_bb-findutils() {
    pkgdesc="findutils symlinks for busybox"
    groups=('bb' 'base')
    depends=('busybox')
    provides=('findutils')
    conflicts=('findutils')

    FIND="find grep xargs egrep fgrep"

    _link_packages $FIND
}

_link_packages() {

    install -dm755 "${pkgdir}/usr/bin"
    
    for package in $@; do
        ln -s "busybox" "${pkgdir}/usr/bin/${package}"
    done
}
